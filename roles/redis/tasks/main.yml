- name: create group for redis
  group:
    name: redis
    state: present

- name: crete user for redis
  user:
    name: redis
    group: redis
    create_home: no
    shell: /usr/sbin/nologin
    state: present

- name: create data dir
  file:
    path: "{{ data_dir }}"
    state: directory
    owner: redis
    group: redis

- name: create install dir
  file:
    path: "{{ install_dir }}"
    state: directory
    owner: root
    group: root

- name: create config dir
  file:
    path: "{{ config_dir }}"
    state: directory
    owner: root
    group: root

- name: create log dir
  file:
    path: "{{ log_dir }}"
    state: directory
    owner: redis
    group: redis

- name: test if redis is installed
  find:
    paths:
      - "{{ install_dir }}/redis-server"
  register: files_found

- name: download source code of redis
  unarchive:
    src: "https://download.redis.io/redis-stable.tar.gz"
    dest: /tmp
    remote_src: yes
  when: files_found == 0

- name: compile source code of redis
  shell:
    cmd: "cd /tmp/redis-stable && make"
  when: files_found == 0

- name: copy binary file to install dir
  shell:
    cmd: "cp /tmp/redis-stable/src/{{ item }} {{ install_dir }}"
  with_items:
    - redis-benchmark
    - redis-check-aof
    - redis-check-rdb
    - redis-cli
    - redis-sentinel
    - redis-server
  when: files_found == 0

- name: remove source dir
  file:
    path: "/tmp/redis-stable"
    state: absent
  when: files_found == 0

- name: copy redis config file
  template:
    src: redis.conf.j2
    dest: "{{ config_dir }}/redis.conf"
  notify:
    - restart redis

- name: copy systemv redis.service file
  template:
    src: redis.service.j2
    dest: /lib/systemd/system/redis.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - systemctl daemon reload
    - restart redis

- name: start redis
  service:
    name: redis
    state: started
    enabled: yes
